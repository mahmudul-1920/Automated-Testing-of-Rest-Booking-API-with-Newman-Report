{
	"info": {
		"_postman_id": "35529149-e7c4-4f1d-aa22-164640671b5c",
		"name": "My_Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38811381",
		"_collection_link": "https://api-testing-3791.postman.co/workspace/IT_BD_Batch28~1df99f44-1217-4ff5-9fa7-85a89c21c9ba/collection/38811381-35529149-e7c4-4f1d-aa22-164640671b5c?action=share&source=collection_link&creator=38811381"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName =pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstname\",firstName)\r",
							"\r",
							"var lastName =pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"lastname\",lastName)\r",
							"\r",
							"var totalPrice =pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalprice\",totalPrice)\r",
							"\r",
							"var depositPaid =pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositPaid)\r",
							"pm.environment.set(\"depositpaid\",depositPaid)\r",
							"\r",
							"\r",
							"const moment =require(\"moment\")\r",
							"const today =moment()\r",
							"//console.log(today.add(5,'d').add(1,'M').add(1,'Y').format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.subtract(5,'d').subtract(1,'M').subtract(1,'Y').format(\"YYYY-MM-DD\"))\r",
							"var checkIn =today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkIn)\r",
							"\r",
							"var checkOut =today.add(5,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkOut)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jasonData=pm.response.json()\r",
							"pm.environment.set(\"id\",jasonData.bookingid)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstname}}\",\r\n\t\"lastname\" : \"{{lastname}}\",\r\n\t\"totalprice\" : \"{{totalprice}}\",\r\n\t\"depositpaid\" : \"{{depositpaid}}\",\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jasonData =pm.response.json()\r",
							"\r",
							"pm.test(\"First Name Validation\", function(){\r",
							"    pm.expect(jasonData.firstname).to.eql(pm.environment.get(\"firstname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Last name Validation\", function(){\r",
							"    pm.expect(jasonData.lastname).to.eql(pm.environment.get(\"lastname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Varify Total Price\", function(){\r",
							"    pm.expect(jasonData.totalprice.toString()).to.eql(pm.environment.get(\"totalprice\"))\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"varify Checkin Date\", function(){\r",
							"    pm.expect(jasonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Varify Checkout Date\", function(){\r",
							"    pm.expect(jasonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jasonData =pm.response.json()\r",
							"pm.environment.set(\"token\",jasonData.token)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"update_firstname\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"update_lastname\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"update_totalprice\",totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositPaid)\r",
							"pm.environment.set(\"update_depositpaid\",depositPaid)\r",
							"\r",
							"const moment =require(\"moment\")\r",
							"const today = moment()\r",
							"var checkIn =today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"update_checkin\",checkIn)\r",
							"\r",
							"var checkOut =today.add(10,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"update_checkout\",checkOut)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{update_firstname}}\",\r\n\t\"lastname\" : \"{{update_lastname}}\",\r\n\t\"totalprice\" : {{update_totalprice}},\r\n\t\"depositpaid\" : {{update_depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{update_checkin}}\",\r\n    \t\"checkout\" : \"{{update_checkout}}\" \r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Varify After Update Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jasonData= pm.response.json()\r",
							"\r",
							"pm.test(\"update first name validation\",function(){\r",
							"    pm.expect(jasonData.firstname).to.eql(pm.environment.get(\"update_firstname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Update last name validation\",function(){\r",
							"    pm.expect(jasonData.lastname).to.eql(pm.environment.get(\"update_lastname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Update total price validation\", function(){\r",
							"    pm.expect(jasonData.totalprice.toString()).to.eql(pm.environment.get(\"update_totalprice\"))\r",
							"})\r",
							"\r",
							"pm.test(\"update depositpaid validation\", function(){\r",
							"    pm.expect(jasonData.depositpaid.toString()).to.eql(pm.environment.get(\"update_depositpaid\"))\r",
							"})\r",
							"\r",
							"pm.test(\"varify update Checkin Date\", function(){\r",
							"    pm.expect(jasonData.bookingdates.checkin).to.eql(pm.environment.get(\"update_checkin\"))\r",
							"})\r",
							"\r",
							"pm.test(\"varify Checkin Date\", function(){\r",
							"    pm.expect(jasonData.bookingdates.checkout).to.eql(pm.environment.get(\"update_checkout\"))\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token ={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Varify After Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Removed unnecessary response.json() call\r",
							"pm.test(\"Response status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}